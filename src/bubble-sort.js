/*

Сортиро́вка простыми обменами, сортировка пузырько́м (англ. bubble sort) — простой алгоритм сортировки.

Алгоритм состоит из повторяющихся проходов по сортируемому массиву. За каждый проход элементы последовательно 
сравниваются попарно и, если порядок в паре неверный, выполняется перестановка элементов. Проходы по массиву 
повторяются {\displaystyle N-1}N-1 раз или до тех пор, пока на очередном проходе не окажется, что обмены больше 
не нужны, что означает — массив отсортирован. При каждом проходе алгоритма по внутреннему циклу, очередной 
наибольший элемент массива ставится на своё место в конце массива рядом с предыдущим «наибольшим элементом», 
а наименьший элемент перемещается на одну позицию к началу массива («всплывает» до нужной позиции, как пузырёк 
в воде — отсюда и название алгоритма).

*/

import { endLog, startLog } from "./utils";

export const bubbleSort = (arr) => {
  startLog('Bubble sort');

  let iterations = 0, comparisons = 0, writes = 0;

  //идем циклом по массиву
  for(let i = 0; i < arr.length; i++) {

    iterations++;

    /*
    внутри запускаем второй цикл, который заканчивается на i - 1 первого цикла,
    т.к. в результате свапа на каждой итерации самый большой элемент ставится в конец
    */
    for(let j = 0; j < arr.length - i - 1; j++) {

      iterations++;
      comparisons++;
      //сравниваем текущий элемент и следующий
      if(arr[j] > arr[j + 1]) {

        writes++;
        //меняем местами если 
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
      }
    }
  }
  
  endLog(iterations, comparisons, writes);
}